# Generated by the protocol buffer compiler.  DO NOT EDIT!
# Source: flagd/sync/v1/sync.proto for package 'OpenFeature.Flagd.Provider.Grpc.Sync'
# Original file comments:
# *
# Flag definition sync API
#
# This proto defines a simple API to synchronize a feature flag definition.
# It supports establishing a stream for getting notifications about changes in a flag definition.

require 'grpc'
require 'flagd/sync/v1/sync_pb'

module OpenFeature
  module Flagd
    module Provider
      module Grpc
        module Sync
          module FlagSyncService
            # FlagService implements a server streaming to provide realtime flag configurations
            class Service

              include ::GRPC::GenericService

              self.marshal_class_method = :encode
              self.unmarshal_class_method = :decode
              self.service_name = 'flagd.sync.v1.FlagSyncService'

              rpc :SyncFlags, ::OpenFeature::Flagd::Provider::Grpc::Sync::SyncFlagsRequest, stream(::OpenFeature::Flagd::Provider::Grpc::Sync::SyncFlagsResponse)
              rpc :FetchAllFlags, ::OpenFeature::Flagd::Provider::Grpc::Sync::FetchAllFlagsRequest, ::OpenFeature::Flagd::Provider::Grpc::Sync::FetchAllFlagsResponse
              rpc :GetMetadata, ::OpenFeature::Flagd::Provider::Grpc::Sync::GetMetadataRequest, ::OpenFeature::Flagd::Provider::Grpc::Sync::GetMetadataResponse
            end

            Stub = Service.rpc_stub_class
          end
        end
      end
    end
  end
end
